name: 🚀 Deploy Shiv Shiva Residency

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggers

jobs:
  # Test and Build Job
  test-and-build:
    name: 🧪 Test & Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 📦 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 📥 Install Root Dependencies
      run: npm ci
      
    - name: 📥 Install Backend Dependencies
      working-directory: ./backend
      run: npm ci
      
    - name: 📥 Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: 🔍 Lint Backend
      working-directory: ./backend
      run: npm run lint --if-present
      
    - name: 🔍 Lint Frontend
      working-directory: ./frontend
      run: npm run lint --if-present
      
    - name: 🧪 Test Backend
      working-directory: ./backend
      run: npm test
      
    - name: 🧪 Test Frontend
      working-directory: ./frontend
      run: npm test --if-present
      
    - name: 🏗️ Build Backend
      working-directory: ./backend
      run: npm run build
      
    - name: 🏗️ Build Frontend
      working-directory: ./frontend
      run: npm run build
      
    - name: 📤 Upload Backend Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build-${{ matrix.node-version }}
        path: backend/dist/
        retention-days: 1
        
    - name: 📤 Upload Frontend Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build-${{ matrix.node-version }}
        path: frontend/dist/
        retention-days: 1

  # Deploy notification (Manual deployment recommended)
  deployment-ready:
    name: 🚀 Deployment Ready
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📦 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🚀 Deployment Instructions
      run: |
        echo "🎉 Build successful! Ready for deployment."
        echo ""
        echo "🚂 Backend Deployment (Railway):"
        echo "1. Visit https://railway.app"
        echo "2. Connect this GitHub repository"
        echo "3. Set root path to 'backend'"
        echo "4. Add environment variables"
        echo "5. Deploy automatically on push"
        echo ""
        echo "⚡ Frontend Deployment (Vercel):"
        echo "1. Visit https://vercel.com"
        echo "2. Import this GitHub repository"
        echo "3. Set root directory to 'frontend'"
        echo "4. Add environment variables"
        echo "5. Deploy automatically on push"
        echo ""
        echo "📋 Manual deployment script available: ./deploy.sh"

  # Code Quality Check
  quality-check:
    name: 🔍 Quality Check
    runs-on: ubuntu-latest
    needs: test-and-build
    
    steps:
    - name: 📦 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: 📥 Install Dependencies
      run: |
        npm ci
        cd backend && npm ci && cd ..
        cd frontend && npm ci && cd ..
        
    - name: 🔍 Security Audit
      run: |
        echo "Running security audit..."
        cd backend && npm audit --audit-level=moderate || true
        cd ../frontend && npm audit --audit-level=moderate || true
        
    - name: 📊 Build Size Check
      run: |
        echo "Checking build sizes..."
        cd backend && npm run build
        echo "Backend build size:"
        du -sh dist/ || echo "No backend build found"
        cd ../frontend && npm run build
        echo "Frontend build size:"
        du -sh dist/ || echo "No frontend build found"
        
    - name: ✅ Quality Check Complete
      run: |
        echo "🎉 Quality checks passed!"
        echo "📦 Application is ready for production deployment" 
